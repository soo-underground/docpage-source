{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome page This is a test docpage, here I am trying to create a documentation website. Right now there's not much going on here. Hopefully, in the nearest future this website will contain following chapters: Engine should have all the info on how I use the Mkdocs engine for this website. Continuous Integration should have all the info about building and deploying my docs. Changelog lists major \"releases\" and \"release notes\". Contacts should have my contact info.","title":"Home"},{"location":"#welcome-page","text":"This is a test docpage, here I am trying to create a documentation website. Right now there's not much going on here. Hopefully, in the nearest future this website will contain following chapters: Engine should have all the info on how I use the Mkdocs engine for this website. Continuous Integration should have all the info about building and deploying my docs. Changelog lists major \"releases\" and \"release notes\". Contacts should have my contact info.","title":"Welcome page"},{"location":"api-getnote/","text":"","title":"Api getnote"},{"location":"api-userinfo/","text":"","title":"Api userinfo"},{"location":"api/","text":"Welcome to test doc site Built using MKDocs mkdocs.org . Test chapter test table: one two three 1 2 3 i ii iii","title":"Welcome to test doc site"},{"location":"api/#welcome-to-test-doc-site","text":"Built using MKDocs mkdocs.org .","title":"Welcome to test doc site"},{"location":"api/#test-chapter","text":"test table: one two three 1 2 3 i ii iii","title":"Test chapter"},{"location":"buildapp/","text":"Continuous Integration Continuous Integration is powered by a heroku app . This app provides remote builds and commits into Github Pages repo. The whole workflow for any changes on this pages works like this: Technical writer edits source file at his local copy of the projects. At this step website can be built locally with the MkDocs command mkdocs build and viewed in browser at 127.0.0.1:8000. Technical writer commits and pushes his local changes to the source repo . Github automatically sends POST-request at the predetermined URL of a heroku build build app. Heroku app receives this requests and starts the process of mkdocs building: BuildApp clones docpage-source repo, install MkDocs and all of it's required dependencies (such as Material, Fenced code tabs, e.t.c). BuildApp starts mkdocs build to create html-output from markdown source files. BuildApp pushes all of MkDocs output into Github Pages Repo . After a while (from 30 seconds to several minutes) all the changes can be viewed at https://soo-underground.github.io. Here's a rough scheme of the whole process:","title":"Workflow"},{"location":"buildapp/#continuous-integration","text":"Continuous Integration is powered by a heroku app . This app provides remote builds and commits into Github Pages repo. The whole workflow for any changes on this pages works like this: Technical writer edits source file at his local copy of the projects. At this step website can be built locally with the MkDocs command mkdocs build and viewed in browser at 127.0.0.1:8000. Technical writer commits and pushes his local changes to the source repo . Github automatically sends POST-request at the predetermined URL of a heroku build build app. Heroku app receives this requests and starts the process of mkdocs building: BuildApp clones docpage-source repo, install MkDocs and all of it's required dependencies (such as Material, Fenced code tabs, e.t.c). BuildApp starts mkdocs build to create html-output from markdown source files. BuildApp pushes all of MkDocs output into Github Pages Repo . After a while (from 30 seconds to several minutes) all the changes can be viewed at https://soo-underground.github.io. Here's a rough scheme of the whole process:","title":"Continuous Integration"},{"location":"changelog/","text":"Releases 0.4 September, 2018 New content: Engine - description of MkDocs usage and settings. Continuous Integration - description of CI workflow. 0.3 August, 2018 Moved CI from AWS to Heroku 0.2 May, 2018 Added AWS CodeBuild project for CI 0.1 2018 New document","title":"Changelog"},{"location":"changelog/#releases","text":"","title":"Releases"},{"location":"changelog/#04-september-2018","text":"New content: Engine - description of MkDocs usage and settings. Continuous Integration - description of CI workflow.","title":"0.4 September, 2018"},{"location":"changelog/#03-august-2018","text":"Moved CI from AWS to Heroku","title":"0.3 August, 2018"},{"location":"changelog/#02-may-2018","text":"Added AWS CodeBuild project for CI","title":"0.2 May, 2018"},{"location":"changelog/#01-2018","text":"New document","title":"0.1 2018"},{"location":"contacts/","text":"Contacts","title":"Contacts"},{"location":"contacts/#contacts","text":"","title":"Contacts"},{"location":"markdown/","text":"test About page ## test subchapter 1 test text. test subchapter 2 another test text how this page works (for now): my plan:","title":"Schemes"},{"location":"markdown/#test-about-page","text":"## test subchapter 1 test text.","title":"test About page"},{"location":"markdown/#test-subchapter-2","text":"another test text how this page works (for now): my plan:","title":"test subchapter 2"},{"location":"mkdocs/","text":"MkDocs This website is written in markdown and powered by MkDocs . why markdown? easy to start easy to modify css and even js easy to work with docs as code The source files are stored in a github repo and turned into HTML. Since by default MkDocs style and syntax are not that rich, I'm using Material theme and fenced-code-tabs markdown extention.","title":"MKdocs"},{"location":"mkdocs/#mkdocs","text":"This website is written in markdown and powered by MkDocs . why markdown? easy to start easy to modify css and even js easy to work with docs as code The source files are stored in a github repo and turned into HTML. Since by default MkDocs style and syntax are not that rich, I'm using Material theme and fenced-code-tabs markdown extention.","title":"MkDocs"},{"location":"quickstart/","text":"Quickstart This step-by-step guide will help you to get your documentation project up and running. Just MkDocs Install python 3. Install MkDocs engine (pip install mkdocs). Create a .md text file and write something there. Create mkdocs.yml file with just a link to your .md file. Run mkdocs serve command from your projects directory. Visit http://127.0.0.1:8000 page to look at you webpage. Visit site directory - now it should have an html files. Copy them to any hosting of your choosing - GithubPages, S3 or any other. Visit an url of that hosting and view your website. :warning: this step may take a while! Hurray! You're awesome!","title":"Getting started"},{"location":"quickstart/#quickstart","text":"This step-by-step guide will help you to get your documentation project up and running.","title":"Quickstart"},{"location":"quickstart/#just-mkdocs","text":"Install python 3. Install MkDocs engine (pip install mkdocs). Create a .md text file and write something there. Create mkdocs.yml file with just a link to your .md file. Run mkdocs serve command from your projects directory. Visit http://127.0.0.1:8000 page to look at you webpage. Visit site directory - now it should have an html files. Copy them to any hosting of your choosing - GithubPages, S3 or any other. Visit an url of that hosting and view your website. :warning: this step may take a while! Hurray! You're awesome! <!-- ## Autobuilds Now, since you've started making changes to your website, you may have noticed that it takes some effort to update your webpage. You have to build it locally, go to site folder and commit build artifacts. There are several ways to make your life easier: * Commit artifacts directly to your hosting website. It's quite easy, especially for Github - you change you project setting to put build artifacts directly to Github*Pages* repo. After that - just stage, commit and push your changes. Still takes a while, but certanly easier that moving artifacts by hand. * Put your building and pushing somewhere else, let's say Amazon CodeBuild. It allows you to do everything in the cloud and starts with just a commit to your source repo! But be aware - CodeBuild offers limited build time for free. Exceed that limit, and Jeff will come for you and your hard-earned money! After all, you have to provide your credit card info upon registering AWS account. * Put your building and pushing somewhere else, but actually for free. You can use heroku for that. ## Autotests --/>","title":"Just MkDocs"},{"location":"tabs/","text":"","title":"Tabs"}]}